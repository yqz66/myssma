<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.tangcco.student.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="cn.bdqn.tangcco.entity.Student">
    <id column="stuid" jdbcType="INTEGER" property="stuid" />
    <result column="gradeid" jdbcType="INTEGER" property="gradeid" />
    <result column="stuname" jdbcType="VARCHAR" property="stuname" />
    <result column="stunum" jdbcType="VARCHAR" property="stunum" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stuid, gradeid, stuname, stunum, age, gender
  </sql>
  <resultMap id="StudentNameAndGradeName" type="cn.bdqn.tangcco.entity.Student" autoMapping="true">
    <id property="stuid" column="stuid"></id>
    <association property="grade" javaType="cn.bdqn.tangcco.entity.Grade">
        <result column="gradename" property="gradename"></result>
    </association>
  </resultMap>
  <select id="queryAllStudent" resultMap="StudentNameAndGradeName">
    select s.*,g.gradename from student s,grade g where g.gradeid=s.gradeid
    <if test="student!=null">
      <if test="student.stuname!=null and student.stuname!=''">
        and s.stuname LIKE concat('%',#{student.stuname},'%')
      </if>
      <if test="student.gradeid!=null and student.gradeid!=0">
        and s.gradeid=#{student.gradeid}
      </if>
    </if>
    order by s.stuid
    <if test="page!=null">
      LIMIT #{page.pageNumber},#{page.pageSize}
    </if>

  </select>
  <select id="queryCountStudent" resultType="int">
    SELECT count(*) from student  WHERE  1=1
    <if test="student!=null">
      <if test="student.stuname!=null and student.stuname!=''">
       and stuname like concat('%',#{student.stuname},'%')
      </if>
      <if test="student.gradeid!=null and student.gradeid!=0">
        and gradeid=#{student.gradeid}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.bdqn.tangcco.entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where stuid = #{stuid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where stuid = #{stuid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bdqn.tangcco.entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.bdqn.tangcco.entity.Student">
    insert into student (stuid, gradeid, stuname, 
      stunum, age, gender
      )
    values (#{stuid,jdbcType=INTEGER}, #{gradeid,jdbcType=INTEGER}, #{stuname,jdbcType=VARCHAR}, 
      #{stunum,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.bdqn.tangcco.entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        stuid,
      </if>
      <if test="gradeid != null">
        gradeid,
      </if>
      <if test="stuname != null">
        stuname,
      </if>
      <if test="stunum != null">
        stunum,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuid != null">
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="gradeid != null">
        #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="stuname != null">
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stunum != null">
        #{stunum,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bdqn.tangcco.entity.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.stuid != null">
        stuid = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.gradeid != null">
        gradeid = #{record.gradeid,jdbcType=INTEGER},
      </if>
      <if test="record.stuname != null">
        stuname = #{record.stuname,jdbcType=VARCHAR},
      </if>
      <if test="record.stunum != null">
        stunum = #{record.stunum,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set stuid = #{record.stuid,jdbcType=INTEGER},
      gradeid = #{record.gradeid,jdbcType=INTEGER},
      stuname = #{record.stuname,jdbcType=VARCHAR},
      stunum = #{record.stunum,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.tangcco.entity.Student">
    update student
    <set>
      <if test="gradeid != null">
        gradeid = #{gradeid,jdbcType=INTEGER},
      </if>
      <if test="stuname != null">
        stuname = #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stunum != null">
        stunum = #{stunum,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
    </set>
    where stuid = #{stuid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.tangcco.entity.Student">
    update student
    set gradeid = #{gradeid,jdbcType=INTEGER},
      stuname = #{stuname,jdbcType=VARCHAR},
      stunum = #{stunum,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR}
    where stuid = #{stuid,jdbcType=INTEGER}
  </update>
</mapper>